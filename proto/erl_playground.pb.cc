// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/erl_playground.proto

#include "proto/erl_playground.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_proto_2ferl_5fplayground_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_create_session_proto_2ferl_5fplayground_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ferl_5fplayground_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_server_message_proto_2ferl_5fplayground_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ferl_5fplayground_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_req_proto_2ferl_5fplayground_2eproto;
class create_sessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<create_session> _instance;
} _create_session_default_instance_;
class server_messageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<server_message> _instance;
} _server_message_default_instance_;
class reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<req> _instance;
} _req_default_instance_;
class envelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<envelope> _instance;
} _envelope_default_instance_;
static void InitDefaultscreate_session_proto_2ferl_5fplayground_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_create_session_default_instance_;
    new (ptr) ::create_session();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::create_session::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_create_session_proto_2ferl_5fplayground_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscreate_session_proto_2ferl_5fplayground_2eproto}, {}};

static void InitDefaultsserver_message_proto_2ferl_5fplayground_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_server_message_default_instance_;
    new (ptr) ::server_message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server_message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_server_message_proto_2ferl_5fplayground_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsserver_message_proto_2ferl_5fplayground_2eproto}, {}};

static void InitDefaultsreq_proto_2ferl_5fplayground_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_req_default_instance_;
    new (ptr) ::req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::req::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_req_proto_2ferl_5fplayground_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsreq_proto_2ferl_5fplayground_2eproto}, {
      &scc_info_create_session_proto_2ferl_5fplayground_2eproto.base,
      &scc_info_server_message_proto_2ferl_5fplayground_2eproto.base,}};

static void InitDefaultsenvelope_proto_2ferl_5fplayground_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_envelope_default_instance_;
    new (ptr) ::envelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_envelope_proto_2ferl_5fplayground_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsenvelope_proto_2ferl_5fplayground_2eproto}, {
      &scc_info_req_proto_2ferl_5fplayground_2eproto.base,}};

void InitDefaults_proto_2ferl_5fplayground_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_create_session_proto_2ferl_5fplayground_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_server_message_proto_2ferl_5fplayground_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_req_proto_2ferl_5fplayground_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_envelope_proto_2ferl_5fplayground_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_proto_2ferl_5fplayground_2eproto[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_proto_2ferl_5fplayground_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_proto_2ferl_5fplayground_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_proto_2ferl_5fplayground_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::create_session, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::create_session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::create_session, username_),
  0,
  PROTOBUF_FIELD_OFFSET(::server_message, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::server_message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::server_message, message_),
  0,
  PROTOBUF_FIELD_OFFSET(::req, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::req, type_),
  PROTOBUF_FIELD_OFFSET(::req, create_session_data_),
  PROTOBUF_FIELD_OFFSET(::req, server_message_data_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::envelope, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::envelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::envelope, uncompressed_data_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::create_session)},
  { 7, 13, sizeof(::server_message)},
  { 14, 22, sizeof(::req)},
  { 25, 31, sizeof(::envelope)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_create_session_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_server_message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_envelope_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_proto_2ferl_5fplayground_2eproto = {
  {}, AddDescriptors_proto_2ferl_5fplayground_2eproto, "proto/erl_playground.proto", schemas,
  file_default_instances, TableStruct_proto_2ferl_5fplayground_2eproto::offsets,
  file_level_metadata_proto_2ferl_5fplayground_2eproto, 4, file_level_enum_descriptors_proto_2ferl_5fplayground_2eproto, file_level_service_descriptors_proto_2ferl_5fplayground_2eproto,
};

const char descriptor_table_protodef_proto_2ferl_5fplayground_2eproto[] =
  "\n\032proto/erl_playground.proto\"\"\n\016create_s"
  "ession\022\020\n\010username\030\001 \002(\t\"!\n\016server_messa"
  "ge\022\017\n\007message\030\001 \002(\t\"\264\001\n\003req\022\034\n\004type\030\001 \002("
  "\0162\016.req.type_enum\022,\n\023create_session_data"
  "\030\002 \001(\0132\017.create_session\022,\n\023server_messag"
  "e_data\030\003 \001(\0132\017.server_message\"3\n\ttype_en"
  "um\022\022\n\016create_session\020\001\022\022\n\016server_message"
  "\020\002\"+\n\010envelope\022\037\n\021uncompressed_data\030\002 \002("
  "\0132\004.req"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_proto_2ferl_5fplayground_2eproto = {
  false, InitDefaults_proto_2ferl_5fplayground_2eproto, 
  descriptor_table_protodef_proto_2ferl_5fplayground_2eproto,
  "proto/erl_playground.proto", &assign_descriptors_table_proto_2ferl_5fplayground_2eproto, 327,
};

void AddDescriptors_proto_2ferl_5fplayground_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_proto_2ferl_5fplayground_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2ferl_5fplayground_2eproto = []() { AddDescriptors_proto_2ferl_5fplayground_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* req_type_enum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_proto_2ferl_5fplayground_2eproto);
  return file_level_enum_descriptors_proto_2ferl_5fplayground_2eproto[0];
}
bool req_type_enum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const req_type_enum req::create_session;
const req_type_enum req::server_message;
const req_type_enum req::type_enum_MIN;
const req_type_enum req::type_enum_MAX;
const int req::type_enum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void create_session::InitAsDefaultInstance() {
}
class create_session::HasBitSetters {
 public:
  static void set_has_username(create_session* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int create_session::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

create_session::create_session()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:create_session)
}
create_session::create_session(const create_session& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:create_session)
}

void create_session::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_create_session_proto_2ferl_5fplayground_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

create_session::~create_session() {
  // @@protoc_insertion_point(destructor:create_session)
  SharedDtor();
}

void create_session::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void create_session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const create_session& create_session::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_create_session_proto_2ferl_5fplayground_2eproto.base);
  return *internal_default_instance();
}


void create_session::Clear() {
// @@protoc_insertion_point(message_clear_start:create_session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    username_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* create_session::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<create_session*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("create_session.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool create_session::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:create_session)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "create_session.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:create_session)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:create_session)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void create_session::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:create_session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "create_session.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:create_session)
}

::google::protobuf::uint8* create_session::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:create_session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "create_session.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:create_session)
  return target;
}

size_t create_session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:create_session)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void create_session::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:create_session)
  GOOGLE_DCHECK_NE(&from, this);
  const create_session* source =
      ::google::protobuf::DynamicCastToGenerated<create_session>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:create_session)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:create_session)
    MergeFrom(*source);
  }
}

void create_session::MergeFrom(const create_session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:create_session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_username()) {
    _has_bits_[0] |= 0x00000001u;
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void create_session::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:create_session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void create_session::CopyFrom(const create_session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:create_session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool create_session::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void create_session::Swap(create_session* other) {
  if (other == this) return;
  InternalSwap(other);
}
void create_session::InternalSwap(create_session* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata create_session::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ferl_5fplayground_2eproto);
  return ::file_level_metadata_proto_2ferl_5fplayground_2eproto[kIndexInFileMessages];
}


// ===================================================================

void server_message::InitAsDefaultInstance() {
}
class server_message::HasBitSetters {
 public:
  static void set_has_message(server_message* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int server_message::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

server_message::server_message()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:server_message)
}
server_message::server_message(const server_message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:server_message)
}

void server_message::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_server_message_proto_2ferl_5fplayground_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

server_message::~server_message() {
  // @@protoc_insertion_point(destructor:server_message)
  SharedDtor();
}

void server_message::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void server_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const server_message& server_message::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_server_message_proto_2ferl_5fplayground_2eproto.base);
  return *internal_default_instance();
}


void server_message::Clear() {
// @@protoc_insertion_point(message_clear_start:server_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* server_message::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<server_message*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("server_message.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool server_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server_message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "server_message.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void server_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "server_message.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server_message)
}

::google::protobuf::uint8* server_message::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:server_message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "server_message.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server_message)
  return target;
}

size_t server_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server_message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void server_message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server_message)
  GOOGLE_DCHECK_NE(&from, this);
  const server_message* source =
      ::google::protobuf::DynamicCastToGenerated<server_message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server_message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server_message)
    MergeFrom(*source);
  }
}

void server_message::MergeFrom(const server_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    _has_bits_[0] |= 0x00000001u;
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void server_message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void server_message::CopyFrom(const server_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool server_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void server_message::Swap(server_message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void server_message::InternalSwap(server_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata server_message::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ferl_5fplayground_2eproto);
  return ::file_level_metadata_proto_2ferl_5fplayground_2eproto[kIndexInFileMessages];
}


// ===================================================================

void req::InitAsDefaultInstance() {
  ::_req_default_instance_._instance.get_mutable()->create_session_data_ = const_cast< ::create_session*>(
      ::create_session::internal_default_instance());
  ::_req_default_instance_._instance.get_mutable()->server_message_data_ = const_cast< ::server_message*>(
      ::server_message::internal_default_instance());
}
class req::HasBitSetters {
 public:
  static void set_has_type(req* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::create_session& create_session_data(const req* msg);
  static void set_has_create_session_data(req* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::server_message& server_message_data(const req* msg);
  static void set_has_server_message_data(req* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::create_session&
req::HasBitSetters::create_session_data(const req* msg) {
  return *msg->create_session_data_;
}
const ::server_message&
req::HasBitSetters::server_message_data(const req* msg) {
  return *msg->server_message_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req::kTypeFieldNumber;
const int req::kCreateSessionDataFieldNumber;
const int req::kServerMessageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req::req()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:req)
}
req::req(const req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_create_session_data()) {
    create_session_data_ = new ::create_session(*from.create_session_data_);
  } else {
    create_session_data_ = nullptr;
  }
  if (from.has_server_message_data()) {
    server_message_data_ = new ::server_message(*from.server_message_data_);
  } else {
    server_message_data_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:req)
}

void req::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_req_proto_2ferl_5fplayground_2eproto.base);
  ::memset(&create_session_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_message_data_) -
      reinterpret_cast<char*>(&create_session_data_)) + sizeof(server_message_data_));
  type_ = 1;
}

req::~req() {
  // @@protoc_insertion_point(destructor:req)
  SharedDtor();
}

void req::SharedDtor() {
  if (this != internal_default_instance()) delete create_session_data_;
  if (this != internal_default_instance()) delete server_message_data_;
}

void req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const req& req::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_req_proto_2ferl_5fplayground_2eproto.base);
  return *internal_default_instance();
}


void req::Clear() {
// @@protoc_insertion_point(message_clear_start:req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(create_session_data_ != nullptr);
      create_session_data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(server_message_data_ != nullptr);
      server_message_data_->Clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* req::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<req*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .req.type_enum type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::req_type_enum_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::req_type_enum>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .create_session create_session_data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::create_session::_InternalParse;
        object = msg->mutable_create_session_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .server_message server_message_data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::server_message::_InternalParse;
        object = msg->mutable_server_message_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:req)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .req.type_enum type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::req_type_enum_IsValid(value)) {
            set_type(static_cast< ::req_type_enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .create_session create_session_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_session_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .server_message server_message_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:req)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .req.type_enum type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .create_session create_session_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::create_session_data(this), output);
  }

  // optional .server_message server_message_data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::server_message_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:req)
}

::google::protobuf::uint8* req::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .req.type_enum type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .create_session create_session_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::create_session_data(this), target);
  }

  // optional .server_message server_message_data = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::server_message_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:req)
  return target;
}

size_t req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:req)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .req.type_enum type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .create_session create_session_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *create_session_data_);
    }

    // optional .server_message server_message_data = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:req)
  GOOGLE_DCHECK_NE(&from, this);
  const req* source =
      ::google::protobuf::DynamicCastToGenerated<req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:req)
    MergeFrom(*source);
  }
}

void req::MergeFrom(const req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_create_session_data()->::create_session::MergeFrom(from.create_session_data());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_server_message_data()->::server_message::MergeFrom(from.server_message_data());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req::CopyFrom(const req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_create_session_data()) {
    if (!this->create_session_data_->IsInitialized()) return false;
  }
  if (has_server_message_data()) {
    if (!this->server_message_data_->IsInitialized()) return false;
  }
  return true;
}

void req::Swap(req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req::InternalSwap(req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(create_session_data_, other->create_session_data_);
  swap(server_message_data_, other->server_message_data_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata req::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ferl_5fplayground_2eproto);
  return ::file_level_metadata_proto_2ferl_5fplayground_2eproto[kIndexInFileMessages];
}


// ===================================================================

void envelope::InitAsDefaultInstance() {
  ::_envelope_default_instance_._instance.get_mutable()->uncompressed_data_ = const_cast< ::req*>(
      ::req::internal_default_instance());
}
class envelope::HasBitSetters {
 public:
  static const ::req& uncompressed_data(const envelope* msg);
  static void set_has_uncompressed_data(envelope* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::req&
envelope::HasBitSetters::uncompressed_data(const envelope* msg) {
  return *msg->uncompressed_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int envelope::kUncompressedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

envelope::envelope()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:envelope)
}
envelope::envelope(const envelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uncompressed_data()) {
    uncompressed_data_ = new ::req(*from.uncompressed_data_);
  } else {
    uncompressed_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:envelope)
}

void envelope::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_envelope_proto_2ferl_5fplayground_2eproto.base);
  uncompressed_data_ = nullptr;
}

envelope::~envelope() {
  // @@protoc_insertion_point(destructor:envelope)
  SharedDtor();
}

void envelope::SharedDtor() {
  if (this != internal_default_instance()) delete uncompressed_data_;
}

void envelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const envelope& envelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_envelope_proto_2ferl_5fplayground_2eproto.base);
  return *internal_default_instance();
}


void envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(uncompressed_data_ != nullptr);
    uncompressed_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* envelope::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<envelope*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .req uncompressed_data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::req::_InternalParse;
        object = msg->mutable_uncompressed_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool envelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .req uncompressed_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uncompressed_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envelope)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void envelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .req uncompressed_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::uncompressed_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:envelope)
}

::google::protobuf::uint8* envelope::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:envelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .req uncompressed_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::uncompressed_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envelope)
  return target;
}

size_t envelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envelope)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .req uncompressed_data = 2;
  if (has_uncompressed_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uncompressed_data_);
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void envelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envelope)
  GOOGLE_DCHECK_NE(&from, this);
  const envelope* source =
      ::google::protobuf::DynamicCastToGenerated<envelope>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envelope)
    MergeFrom(*source);
  }
}

void envelope::MergeFrom(const envelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uncompressed_data()) {
    mutable_uncompressed_data()->::req::MergeFrom(from.uncompressed_data());
  }
}

void envelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void envelope::CopyFrom(const envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool envelope::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_uncompressed_data()) {
    if (!this->uncompressed_data_->IsInitialized()) return false;
  }
  return true;
}

void envelope::Swap(envelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void envelope::InternalSwap(envelope* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(uncompressed_data_, other->uncompressed_data_);
}

::google::protobuf::Metadata envelope::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ferl_5fplayground_2eproto);
  return ::file_level_metadata_proto_2ferl_5fplayground_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::create_session* Arena::CreateMaybeMessage< ::create_session >(Arena* arena) {
  return Arena::CreateInternal< ::create_session >(arena);
}
template<> PROTOBUF_NOINLINE ::server_message* Arena::CreateMaybeMessage< ::server_message >(Arena* arena) {
  return Arena::CreateInternal< ::server_message >(arena);
}
template<> PROTOBUF_NOINLINE ::req* Arena::CreateMaybeMessage< ::req >(Arena* arena) {
  return Arena::CreateInternal< ::req >(arena);
}
template<> PROTOBUF_NOINLINE ::envelope* Arena::CreateMaybeMessage< ::envelope >(Arena* arena) {
  return Arena::CreateInternal< ::envelope >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
